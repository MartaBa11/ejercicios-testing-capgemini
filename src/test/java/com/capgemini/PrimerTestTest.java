package com.capgemini;// Generated by Selenium IDE

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class PrimerTestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() {
    System.setProperty("webdriver.chrome.driver","C:\\Users\\mbarriga\\Downloads\\chromedriver\\chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void primerTest() {
    // Test name: PrimerTest
    // Step # | name | target | value
    // 1 | open | /wiki/Wikipedia:Portada | 
    driver.get("https://es.wikipedia.org/wiki/Wikipedia:Portada");
    // 2 | setWindowSize | 666x681 | 
    driver.manage().window().setSize(new Dimension(666, 681));
    // 3 | click | id=searchInput | 
    driver.findElement(By.id("searchInput")).click();
    // 4 | click | id=searchInput | 
    driver.findElement(By.id("searchInput")).click();
    // 5 | type | id=searchInput | Patata
    driver.findElement(By.id("searchInput")).sendKeys("Patata");
    // 6 | click | id=searchButton | 
    driver.findElement(By.id("searchButton")).click();
    // 7 | click | id=firstHeading | 
    driver.findElement(By.id("firstHeading")).click();
    // 8 | assertText | css=.mw-page-title-main | Solanum tuberosum
    assertEquals("Solanum tuberosum",driver.findElement(By.cssSelector(".mw-page-title-main")).getText());

  }
}
